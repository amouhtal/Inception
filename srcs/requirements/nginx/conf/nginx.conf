# we define a new server block.
server {
    # This line specifies that the nginx server should listen for incoming connections on port 443 using SSL/TLS encryption (ssl).
    # using ssl indicates that the server should expect encrypted connections.
    listen 443 ssl;

    # This line specifies that the server should listen for incoming connections on all available IPv6 addresses.
    listen [::]:443 ssl;

    # This line specifies the server name that the server should use to identify itself.
    # mean that the server will only respond to requests for the domain name amouhtal.42.fr.
    server_name amouhtal.42.fr;
    # this line specifies the root directory for the server. when a request is made for a file, the server will look in this directory, and its subdirectories, for the file.
    root /var/www/html;

    # This line specifies the index files that the server should look for when a request is made for a directory.
    index  index.html index.php;
    # SSL certificate and key paths
    ssl_certificate     /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    # The location / block in the nginx configuration is used to match requests to the base URL and any subpaths. It triggers the instructions within this block for any request that starts with /.
    location / {
      # this line is trying to serve the requested file directly, if it exists.
      # $uri is the request URI, or the part of the URL that comes after the domain name.
      # $uri/ is the request URI with a trailing slash appended.
      #  When a client requests http://example.com/products?id=123, nginx uses try_files $uri $uri/ /index.php?$args; to pass the request to index.php if no matching static file or directory is found. The index.php script then handles the request, using the query parameter id=123 to fetch and display the relevant product information.
      # if the requested file does not exist, the url will be redirected to /index.php?$args (will be passed to location ~ \.php$ block)
		  try_files $uri $uri/ /index.php?$args;
	  }

      # This block is used to match requests for PHP files. It triggers the instructions within this block for any request that ends with .php.
   location ~ \.php$ {
    # Web Server (nginx or Apache): The web server receives HTTP requests from clients. When it needs t serve a PHP page, it forwards the request to the PHP-FPM service using the FastCGI protocol.

    # FastCGI: This protocol is used to pass the request from the web server to the PHP-FPM proces  manager. It ensures efficient communication and request handling between the web server and PHP-FPM.

    # PHP-FPM: PHP-FPM receives the request, manages the PHP worker processes, executes the PHP script  and returns the result back to the web server via FastCGI.

    # Web Server: The web server then sends the response back to the client.

    # This line specifies the path to the fastcgi-php.conf file, which contains the configuratio  settings for the PHP FastCGI process.
    include snippets/fastcgi-php.conf;
    # This line specifies the address and port of the PHP FastCGI process server.
		fastcgi_pass wordpress:9000;
    # This line specifies the SCRIPT_FILENAME parameter that should be passed to the PHP FastCGI process.
    # also specifies the path to the PHP script that should be executed.

		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    # This line includes the fastcgi_params file, which contains additional configuration settings for the FastCGI process.
		include fastcgi_params;
	}
}